FORMAT: 1A
HOST: https://portal.plantyst.com/api/

# Plantyst Portal

Plantyst Portal API is a REST API designed to access data related to customer measurements like basic time series, metrics or annotations.

# Group Authorization

The authorization for the API calls uses token-based principle _JWT_ (_JSON Web Token_). The token has three main parts:
* _Header_ - _JSON_ containing basic information about the token - type and hash algorithm
    * Example: `{ "alg": "HS256", "typ": "JWT"}`
* _Payload_ - _JSON_ containing information about the user in the form of _claims_:
    * `iss` - issuer - the application identifier (required)
    * `accessKey` - user access key (required)
    * `aud` - audience - the target authorization authority (required)
    * `nbf` - not before - Unix timestamp of the token validity start date (optional)
    * `exp` - expiration - Unix timestamp of the token validity end date (optional)
* _Signature_ - defines the secret user key for the encryption

_Header_ and _Payload_ are encoded using the _base64url_ encoding, all three parts are contactenated by a dot character (.) and the whole token is signed using _HMAC-SHA256_ algorithm: `tokenValue=HMAC-SHA256(secret, encodeBase64Url(Header) + '.' + encodeBase64Url(Payload))`

Values of `iss`, `accessKey` and `secret` are established while the token is being initiated in the Plantyst application. Value of `aud` is always equal to `"https://my.plantyst.com"`.

A token is always related to a specific user and it serves to access the resources with his access rights.

The resulting token has to be included in the _Headers_ part of the request with the header name set to `Authorization` and value equal to `Bearer tokenValue`.

# Group Measurements

This section contains endpoints for the resources related to measurements and their basic properties. A measurement is a key data object to which the most of other API data has a relation. A measurement object has the following properties:

* `measurementId` - unique identifier of the measurement
* `title` - title of the measurement
* `description` - additional description for the measurement
* `quantityType` - type of the measured quantity
* `archived` - determines whether the measurement is archived
* `first` - date time of the first collected data sample
* `rights` - the array of current user access rights for the measurement

The rights used in the Plantyst application are the following:
* _View_ - right to view measurement data
* _Contributor_ - right to add or update additional information (like annotations)
* _Admin_ - right to update measurement data (user access, tags, ...)
* _Owner_ - same as Admin, but the access rigths can't be revoked

## Measurements Collection [/Measurements/{?currentSubscriptionOnly}]

### List Measurements [GET]

Gets the list of measurements for which the current user has the access rights for view or higher. 

Along with the measurements, additional data are sent as the embedded resources as follows:
* `timezone` array of all distinct timezones assigned to measurements
* `tag` array of all distinct tags assigned to measurements
* `measurementDataVersion` array of measurement data versions

+ Parameters
    + currentSubscriptionOnly (boolean, `true`) ... Determines whether all measurements or only measurements from the user's current subscription are returned.

+ Response 200 (application/hal+json)
    + Attributes
        + `timeZones` (array) - timezones referenced by the measurements
            + (object)
                + `id` (string) - the time zone identifier
                + `name` (string) - the time zone full name
                + `iana` (string) - the time zone IANA codeMe
        + `tags` (array) - timezones assigned to the measurements
            + (object)
                + `id` (number) - the tag identifier
                + `title` (string) - the tag title
                + `color` (string) - the tag color represented hexadecimal color values
        + `dataVersions` (array) - versions of various measurement-related data
            + (object)
                + `id` (number) - the data version identifier
                + `title` (string) - the data type tile
                + `lastModified` (string) - the date time of the last data modification
        + `resourceList` (array) - the array of _Measurement_ objects
            + (object)
                + `measurementId` (string)
                + `title` (string)
                + `description` (string)
                + `quantityType` (string)
                + `archived` (boolean)
                + `first` (string)
                + `rights` (array)
                    + (string) - assigned right
    + Body

            {
                "timeZones": [
                    {
                        "id": "Central Europe Standard Time",
                        "name": "(UTC+01:00) Belgrade, Bratislava, Budapest, Ljubljana, Prague",
                        "iana": "Europe/Prague",
                        "_links": [
                            {
                                "rel": "self",
                                "href": "~/Api/TimeZone/Central%20Europe%20Standard%20Time",
                                "title": null,
                                "isTemplated": false
                            }
                        ],
                    "_embedded": null
                    }
                ],
                "tags": [
                    {
                        "id": "83",
                        "title": "Technology",
                        "color": "#E67E22",
                        "_links": [
                            {
                                "rel": "self",
                                "href": "~/Api/Tag/83",
                                "title": null,
                                "isTemplated": false
                            }
                        ],
                        "_embedded": null
                    },
                    {
                        "id": "82",
                        "title": "Shop 1",
                        "color": "#1ABC9C",
                        "_links": [
                            {
                                "rel": "self",
                                "href": "~/Api/Tag/82",
                                "title": null,
                                "isTemplated": false
                            }
                        ],
                        "_embedded": null
                    }
                ],
                "dataVersions": [
                    {
                        "id": "414",
                        "title": "TimeSeries",
                        "lastModified": "2016-10-25T16:05:00Z",
                        "_links": [
                            {
                                "rel": "self",
                                "href": "~/Api/MeasurementDataVersion/414",
                                "title": null,
                                "isTemplated": false
                            }
                        ],
                        "_embedded": null
                    },
                    {
                        "id": "415",
                        "title": "TimeSeries",
                        "lastModified": "2016-10-25T16:05:00Z",
                        "_links": [
                            {
                                "rel": "self",
                                "href": "~/Api/MeasurementDataVersion/415",
                                "title": null,
                                "isTemplated": false
                            }
                        ],
                        "_embedded": null
                    }
                ],
                "resourceList": [
                {
                    "measurementId": 3,
                    "title": "Stroj 1",
                    "description": "Access for presentations",
                    "quantityType": "speed",
                    "archived": false,
                    "first": "2016-01-01T00:00:00Z",
                    "rights": [
                        "Admin"
                    ],
                    "_links": [
                        {
                            "rel": "self",
                            "href": "~/Api/Measurement/695",
                            "title": null,
                            "isTemplated": false
                        },
                        {
                            "rel": "timezone",
                            "href": "~/Api/TimeZone/Central%20Europe%20Standard%20Time",
                            "title": null,
                            "isTemplated": false
                        },
                        {
                            "rel": "tags",
                            "href": "~/Api/Tag/82",
                            "title": null,
                            "isTemplated": false
                        },
                        {
                            "rel": "dataVersions",
                            "href": "~/Api/MeasurementDataVersion/414",
                            "title": null,
                            "isTemplated": false
                        }
                ],
                "_embedded": null
                },
                {
                    "measurementId": 4,
                    "title": "Stroj 2",
                    "description": "Access for presentations",
                    "quantityType": "speed",
                    "archived": false,
                    "first": "2016-01-01T00:00:00Z",
                    "rights": [
                        "Admin"
                    ],
                    "_links": [
                        {
                            "rel": "self",
                            "href": "~/Api/Measurement/696",
                            "title": null,
                            "isTemplated": false
                        },
                        {
                            "rel": "timezone",
                            "href": "~/Api/TimeZone/Central%20Europe%20Standard%20Time",
                            "title": null,
                            "isTemplated": false
                        },
                        {
                            "rel": "tags",
                            "href": "~/Api/Tag/83",
                            "title": null,
                            "isTemplated": false
                        },
                        {
                            "rel": "dataVersions",
                            "href": "~/Api/MeasurementDataVersion/415",
                            "title": null,
                            "isTemplated": false
                        }
                    ],
                    "_embedded": null
                    }
                ],
                "_links": [
                    {
                        "rel": "self",
                        "href": "~/Api/Measurements",
                        "title": null,
                        "isTemplated": false
                    }
                ],
                "_embedded": null
            }

+ Response 401 (application/hal+json)
    + Body

            {
                "message":"Authorization has been denied for this request."
            }

+ Response 403  (application/hal+json)
    + Body

            {
                "message":"Forbidden."
            }

+ Response 404  (application/hal+json)
    + Body

            {
                "message":"Not Found."
            }

# Group Measurement Data

This section describes the API endpoints for accessing the basic measurement data.

## Measurement Time Series Aggregation Collection [/MeasurementTimeSeriesAggregationsQuery]

### List Measurement Time Series Aggregation [POST]

Gets the list of Time Series Aggregation items for the given measurement.

The request contains the definition of queries, each for one measurement. A required part of the query is the `View` parameter, which specifies the type of the data aggregation.
Available values are:
* `"Base.MinuteSet"` - set of atomic minute aggregations, each for one UTC minute
* `"Base.Hour"` - set of hour aggregations, each for one UTC hour
* `"Base.Day"` - set of day aggregations, each for one day in the measurement time zone
* `"Base.Month"` - set of month aggregations, each for one month in the measurement time zone

The response for the request contains the copy of the original query, the set of data items and the recipe for the interpretation of the data items (`outputFormat`).
Each item in the output format defines interpretation of the respective data item.
For five output format items and two data samples, there will be ten data items in the response. The array may contain the following values:
* `itemCount` - defines the count of the atomic data items in the aggregation (optional)
* `timeSquareSum` - auxiliary value for the optimized data computations (optional)
* `timeSum` - auxiliary value for the optimized data computations (optional)
* `timeValueSum` - auxiliary value for the optimized data computations (optional)
* `valueSum` - specifies the overal (sum) value of the data item (mandatory)

+ Request (application/hal+json)
    + Attributes
        + Queries (object)
            + `MeasurementId` (number, required) - unique measurement identifier
            + `From` (number, required) - UTC date time in ISO 8061 format that specifies the lower bound of the data query
            + `To` (number, required) - UTC date time in ISO 8061 format that specifies the upper bound of the data query
            + `View` (string, required) - specifies the requested time series type
            + `Precision` (number, required) - specifies the number of precision of the returned values
    + Body

            {
                "Queries": [
                    {
                        "MeasurementId": 3,
                        "From": "2017-06-01T00:00:00Z",
                        "To": "2017-06-01T00:09:00Z",
                        "View": "Base.MinuteSet",
                        "Precision": "2"
                    },
                    {
                        "MeasurementId": 4,
                        "From": "2017-05-31T21:00Z",
                        "To": "2017-05-31T23:00Z",
                        "View": "Base.Hour",
                        "Precision": "2"
                    }
                ]
            }

+ Response 200 (application/hal+json)
    + Attributes
        + `results` (array)
            + (object)
                + `query` (object)
                    + `MeasurementId` (number)
                    + `From` (number)
                    + `To` (number)
                    + `View` (string)
                    + `Precision` (number)
                + `outputFormat` (array) - defines the interpretation for the `data` section
                + `data` (array) - array of data items
                + `first` (string) - UTC date time of first returned data item in ISO 8601 format

    + Body

            {
                "results": [
                    {
                        "query": {
                            "view": "Base.MinuteSet",
                            "precision": "2",
                            "measurementId": 3,
                            "from": "2017-05-31T22:00Z",
                            "to": "2017-05-31T22:09Z"
                        },
                        "outputFormat": [
                            "ValueSum"
                        ],
                        "data":[0,0,3,10,11,10,9,11,10,7],
                        "first":"2017-05-31Z22:00:00Z"
                    },
                    {
                        "query": {
                            "view": "Base.Hour",
                            "precision": "2",
                            "measurementId": 4,
                            "from": "2017-05-31T21:00Z",
                            "to": "2017-05-31T23:00Z"
                        },
                        "outputFormat": [
                            "ItemCount", "TimeSquareSum", "TimeSum", "TimeValueSum", "ValueSum"
                        ],
                        "data":[60,70210,1770,33352,1196,60,70210,1770,24442,963,60,70210,1770,45655,1512],
                        "first":"2017-05-31Z22:00:00Z"
                    }
                ]
            }

+ Response 401 (application/hal+json)
    + Body

            {
                "message":"Authorization has been denied for this request."
            }

+ Response 403  (application/hal+json)
    + Body

            {
                "message":"Forbidden."
            }

+ Response 404  (application/hal+json)
    + Body

            {
                "message":"Not Found."
            }

# Group Metadocuments

Resources related to metadocuments in the API. Metadocument is a general term for various types of measurement-related data like annotations, comments, jobs or downtime entries. Metadocument has the following properties:

* `Guid` - unique identifier of the metadocument (mandatory)
* `MeasurementId` - identifier of the measurement to which the metadocument belongs (mandatory)
* `Type` - type of the metadocument (mandatory); available values:
    * `0` - undefined type
    * `1` - annotation
    * `2` - job
    * `3` - downtime
* `LastModified` - date time of the last modification in UTC (mandatory)
* `From` - start date time in UTC (mandatory)
* `To`  - end date time in UTC (optional)
* `Title` - metadocument title (optional)
* `Description` - extended description, enables _MarkDown_ markup language (optional)
* `CustomId` - user-defined identifier (optional)
* `Color` - color in hex color code (optional)
* `Setpoint` - setpoint for the metadocument; represents the desired value for the measured quantity (optional)
* `DowntimeCode` - related downtime code identifier (optional)
* `CreatorId` - user identifier of the metadocument creator (optional)
* `Operations` - operations defined as the array of string values (optional)
* `Comments` - array of comment objects (mandatory)

A metadocument comment is a self-contained object with the following properties:

* `Id` - identifier of the comment; unique within the metadocument (mandatory)
* `Text` - comment text (mandatory)
* `ModificationTime` - UTC date time of the last modification (mandatory)

__Command-based architecture__

All operations over metadocuments that change their state are command-based, therefore the response for such actions is formed as the relative link to the location, where the result of the request should be checked.

___Typical use case___

Comming soon...

## Add or Patch Metadocument [/Metadocuments/]

### Add Metadocument [POST]

Adds metadocument of given type for the specific measurement.

+ Request
    + Attributes
        + `MeasurementId` (number, required)
        + `MetadocumentType` (number, required)
        + `From` (string, required)
        + `To` (string)
        + `Title` (string)
        + `Description` (string)
        + `CustomId` (string)
        + `Setpoint` (number)
        + `Color` (string)
        + `Operations` (array)
        + `DowntimeCode` (string)

+ Response 200 (application/hal+json)
    + Attributes
        + `location` (string) - specifies the relative url with the result of the requested operation

    + Body

            {
                location": "Api/MetadocumentCommandResults/b2ec82f2-1438-47cd-a982-6b2e3b0476c7"
            }

+ Response 401 (application/hal+json)
    + Body

            {
                "message":"Authorization has been denied for this request."
            }

+ Response 403  (application/hal+json)
    + Body

            {
                "message":"Forbidden."
            }

### Patch Metadocument [PATCH]

Updates the metadocument with specific Guid and given parameters.

+ Request
    + Attributes
        + `Guid` (string, required)
        + `MeasurementId` (number, required)
        + `From` (string, required)
        + `To` (string)
        + `Title` (string)
        + `Description` (string)
        + `CustomId` (string)
        + `Setpoint` (number)
        + `Color` (string)
        + `Operations` (array)
        + `DowntimeCode` (string)

+ Response 200 (application/hal+json)
    + Attributes
        + `location` (string) - specifies the relative url with the result of the requested operation

    + Body

            {
                location": "Api/MetadocumentCommandResults/b2ec82f2-1438-47cd-a982-6b2e3b0476c7"
            }

+ Response 401  (application/hal+json)
    + Body

            {
                "message":"Authorization has been denied for this request."
            }

+ Response 403  (application/hal+json)
    + Body

            {
                "message":"Forbidden."
            }

+ Response 404  (application/hal+json)
    + Body

            {
                "message":"Not Found."
            }

## Delete or Get Metadocument [/Metadocuments/{guid}]

### Delete Metadocument [DELETE]

Deletes the metadocument with specific Guid.

+ Parameters
    + guid (string, required, `e2dd39dc-5389-43b9-b855-426af762811f`) ... unique identifier for the metadocument

+ Response 200 (application/hal+json)
    + Attributes
        + `location` (string) - specifies the relative url with the result of the requested operation

    + Body

            {
                location": "Api/MetadocumentCommandResults/b2ec82f2-1438-47cd-a982-6b2e3b0476c7"
            }

+ Response 401  (application/hal+json)
    + Body

            {
                "message":"Authorization has been denied for this request."
            }

+ Response 403  (application/hal+json)
    + Body

            {
                "message":"Forbidden."
            }

+ Response 404  (application/hal+json)
    + Body

            {
                "message":"Not Found."
            }

### Get Metadocument [GET]

Gets metadocument with specific Guid with embedded comments.

+ Parameters
    + guid (string, required, `e2dd39dc-5389-43b9-b855-426af762811f`) ... unique identifier for the metadocument

+ Response 200 (application/hal+json)
    + Attributes
        + `guid` (string)
        + `type` (number)
        + `title` (string)
        + `creatorId` (number)
        + `measurementId` (number)
        + `from` (string)
        + `to` (string)
        + `color` (string)
        + `setpoint` (number)
        + `lastModified` (string)
        + `_embedded` (object)
            + `comment` (array)
                + (object)
                    + `id` (number)
                    + `text` (string)
                    + `modificationTime` (string)

    + Body

            {
                "guid":"27a858a0-c244-4640-83f8-513dbc70c2e6",
                "type":3,
                "title":"Downtime title",
                "creatorId":497,
                "measurementId":3,
                "from":"2017-06-26T05:30:00Z",
                "to":"2017-06-26T07:30:00Z",
                "color":"#969614",
                "setpoint":50.0,
                "lastModified":"2017-06-26T09:25:15Z",
                "_links": {
                    "self": {
                        "href":"/Api/Metadocuments/27a858a0-c244-4640-83f8-513dbc70c2e6"
                    }
                },
                "_embedded": {
                    "comment": [
                        {
                            "id":1,
                            "text":"Comment text",
                            "modificationTime":"2017-07-19T11:52:12Z",
                            "_links": {
                                "self": {
                                    "href":"/Api/Metadocuments/27a858a0-c244-4640-83f8-513dbc70c2e6/Comments/1/"
                                },
                                "user": {
                                    "href":"/Api/User/101"
                                }
                            }
                        }
                    }
            }

+ Response 401 (application/hal+json)
    + Body

            {
                "message":"Authorization has been denied for this request."
            }

+ Response 403  (application/hal+json)
    + Body

            {
                "message":"Forbidden."
            }

+ Response 404  (application/hal+json)
    + Body

            {
                "message":"Not Found."
            }

## Get Metadocuments [/MetadocumentsQuery]

### Get Metadocuments [POST]

Gets the metadocuments for a given measurement and time range.

+ Request (application/json)
    + Attributes
        + Queries (object)
            + `MeasurementId` (number, required)
            + `From` (string, required)
            + `To` (string, required)
    + Body

            {
                "Queries": [
                    {
                        "MeasurementId": 3,
                        "From": "2017-05-31T22:00:00Z",
                        "To": "2017-06-01T19:59:59Z"
                    }
                ]
            }

+ Response 200 (application/hal+json)
    + Attributes
        + `responseContinuation` (string) - continuation token if the returned data are too long for one response; empty if the query is fully satisfied
        + `dateTime` (string) - UTC date time in ISO 8601 format for which the response is up to date
        + _links (object)
            + self (object)
                + href (string, required)
        + `_embedded` (object)
            + `user` (array)
                + (object)
                    + `userId` (number)
                    + `name` (string)
                    + _links (object)
                        + self (object)
                            + href (string, required)
            + `metadocument` (array)
                + (object)
                    + `guid` (string)
                    + `type` (number, required)
                    + `creatorId` (number)
                    + `measurementId` (number)
                    + `from` (string)
                    + `to` (string, required)
                    + `color` (string)
                    + `lastModified` (string)
                    + _links (object)
                        + self (object)
                            + href (string, required)
                    + `_embedded` (object)
                        + `comment` (array)
                            + (object)
                                + `id` (number)
                                + `text` (string)
                                + `modificationTime` (string)
                                + _links (object)
                                    + self (object)
                                        + href (string, required)
                                    + user (object)
                                        + href (string, required)
    + Body

            {
                "responseContinuation":"",
                "dateTime":"2017-07-13T07:03:03.211009Z",
                "_links": {
                    "self": {
                        "href":"/Api/MetadocumentsQuery/"
                    },
                "_embedded": {
                    "user": [
                        {
                            "userId":497,
                            "name":"Martin Kouďa",
                            "_links": {
                                "self": {
                                    "href":"/Api/User/497"
                                }
                            }
                        }
                    ],
                    "metadocument": [
                        {
                            "guid":"13f6a3b3-0416-49e9-81ed-fab139518c0d",
                            "type":1,
                            "creatorId":497,
                            "measurementId":3,
                            "from":"2017-06-01T10:18:00Z",
                            "to":"2017-06-01T10:18:00Z",
                            "color":"",
                            "lastModified":"2017-07-04T07:48:34Z",
                            "_links": {
                                "self": {
                                    "href":"/Api/Metadocuments/13f6a3b3-0416-49e9-81ed-fab139518c0d"
                                }
                            },
                            "_embedded": {
                                "comment": [
                                    {
                                        "id":0,
                                        "text":"Ahoj...",
                                        "modificationTime":"2017-07-03T12:00:56Z",
                                        "_links": {
                                            "self": {
                                                "href":"/Api/Metadocuments/13f6a3b3-0416-49e9-81ed-fab139518c0d/Comments/0/"
                                            },
                                            "user": {
                                                "href":"/Api/User/497"
                                            }
                                        }
                                    },
                                    {
                                        "id":1,
                                        "text":"Nazdar...",
                                        "modificationTime":"2017-07-04T07:48:41Z",
                                        "_links": {
                                            "self": {
                                                    "href":"/Api/Metadocuments/13f6a3b3-0416-49e9-81ed-fab139518c0d/Comments/1/"
                                                },
                                            "user": {
                                                "href":"/Api/User/497"
                                            }
                                        }
                                    }
                                ]
                            }
                        }
                    ]
                }
            }

+ Response 401  (application/hal+json)
    + Body

            {
                "message":"Authorization has been denied for this request."
            }

+ Response 403  (application/hal+json)
    + Body

            {
                "message":"Forbidden."
            }

+ Response 404  (application/hal+json)
    + Body

            {
                "message":"Not Found."
            }
            
## Get Metadocument Command Result [/MetadocumentCommandResults/{guid}]

### Get Metadocument Command Result [GET]

Gets the metadocument command result.

+ Parameters
    + guid (string, required, `f57513ba-c004-45bc-b28c-610eb00de7c`) ... unique identifier for the metadocument command

+ Response 200 (application/hal+json)
    + Attributes
        + `guid` (string) - unique identifier for the metadocument command
        + `result` (string) - text representation of the result
        + `processedDate` (string) - processed date time of the command in ISO 8601 format
        + `metadocumentGuid` (string) - specifies identifier for the related metadocument

    + Body

            {
                "guid":"27a858a0-c244-4640-83f8-513dbc70c2e6",
                "result":"Success",
                "processedDate":"2017-06-26T05:30:00Z",
                "metadocumentGuid":"2b8748ba-8830-4350-b68b-2599d53f2701",
                "_links": {
                    "self": {
                        "href":"/Api/MetadocumentCommandResults/f57513ba-c004-45bc-b28c-610eb00de7c"
                    },
                    "metadocument": {
                        "href":"/Api/Metadocuments/27a858a0-c244-4640-83f8-513dbc70c2e6"
                    }
                }
            }

+ Response 401 (application/hal+json)
    + Body

            {
                "message":"Authorization has been denied for this request."
            }

+ Response 403  (application/hal+json)
    + Body

            {
                "message":"Forbidden."
            }

+ Response 404  (application/hal+json)
    + Body

            {
                "message":"Not Found."
            }

## Add or Patch Metadocument Comment [/Metadocuments/{guid}/Comments]

### Add Metadocument Comment [POST]

Adds comment to the specific metadocument.

+ Parameters
    + guid (string, required) - Specifies the unique identifier for the metadocument.

+ Request
    + Attributes
        + Queries (object)
            + `Id` (number, required)
            + `Text` (string)
            + `Time` (string)
            + `UserId` (string)

    + Body

            {
                "Queries": [
                    {
                        "Id":3,
                        "Text":"Comment text.",
                        "Time":"2017-06-01T00:09:00Z",
                        "UserId":497,
                    }
                ]
            }

+ Response 200 (application/hal+json)
    + Attributes
        + `location` (string) - specifies the relative url with the result of the requested operation

    + Body

            {
              "location":"Api/MetadocumentCommandResults/deefa769-b7c4-4bb2-901d-89938caded5f"
            }

+ Response 401 (application/hal+json)
    + Body

            {
                "message":"Authorization has been denied for this request."
            }

+ Response 403  (application/hal+json)
    + Body

            {
                "message":"Forbidden."
            }

+ Response 404  (application/hal+json)
    + Body

            {
                "message":"Not Found."
            }

### Patch Metadocument Comment [PATCH]

Updates comment for the specific metadocument.

+ Parameters
    + guid (string, required) - Specifies the unique identifier for the metadocument.

+ Request
    + Attributes
        + Queries (object)
            + `Id` (number, required)
            + `Text` (string)
            + `Time` (string)

+ Response 200 (application/hal+json)
    + Attributes
        + `location` (string) - specifies the relative url with the result of the requested operation

    + Body

            {
              "location":"Api/MetadocumentCommandResults/deefa769-b7c4-4bb2-901d-89938caded5f"
            }

+ Response 401 (application/hal+json)
    + Body

            {
                "message":"Authorization has been denied for this request."
            }

+ Response 403  (application/hal+json)
    + Body

            {
                "message":"Forbidden."
            }

+ Response 404  (application/hal+json)
    + Body

            {
                "message":"Not Found."
            }

## Delete Metadocument Comment [/Metadocuments/{guid}/Comments/{id}]

### Delete Metadocument Comment [DELETE]

Deletes comment for the specific metadocument.

+ Parameters
    + guid (string, required) - Specifies the unique identifier for the metadocument.

+ Request
    + Attributes
        + Queries (object)
            + `Id` (number, required)
            + `Text` (string)
            + `Time` (string)

+ Response 200 (application/hal+json)
    + Attributes
        + `location` (string) - specifies the relative url with the result of the requested operation

    + Body

            {
              "location":"Api/MetadocumentCommandResults/deefa769-b7c4-4bb2-901d-89938caded5f"
            }

+ Response 401 (application/hal+json)
    + Body

            {
                "message":"Authorization has been denied for this request."
            }

+ Response 403  (application/hal+json)
    + Body

            {
                "message":"Forbidden."
            }

+ Response 404  (application/hal+json)
    + Body

            {
                "message":"Not Found."
            }

# DowntimeDictionary
The section contains information about controller that returns downtime codes for set of measurements.

## Get [GET]
Gets the downtime codes for requested measurements.

+ Parameters
    + ids (array, `[10]`) ... Set of measurement identifiers which downtime codes are searched for.

+ Response 200 (application/hal+json)
    + Attributes
        + `_embedded` (object)
            + `downtimeCode` (array)
                + (object)
                    + `downtimeCodeId` (number)
                    + `key` (string)
                    + `code` (string)              
                    + `title` (string)
                    + `severity` (number)
                    + `commandGuid` (string)
            + `measurementDowntimeCode` (object)
                    + `measurementId` (number)
    + Body
        {
            "_links": {
                "self": {
                    "href":"/Api/DowntimeCodes"
                }
            },
            "_embedded": {
                "downtimeCode": [{   
                    "downtimeCodeId":61,
                    "key":"54",
                    "code":"01",
                    "title":"Chybí materiál",
                    "severity":0,
                    "commandGuid":"61e38514-c514-426e-82d0-e19b3e60e6da",
                    "_links": {
                        "self": {
                            "href":"/Api/DowntimeCode/61"
                            }
                        }
                    }
                ],
                "measurementDowntimeCode": {
                    "measurementId": 100,
                    "_links": {
                        "downtimeCode": [{
                            "href": "/Api/DowntimeCode/61"
                            }
                        ],
                        "self": {
                            "href": "/Api/Measurement/100/DowntimeCode"
                        }
                    }
                }
            }
        }

+ Response 400  (application/hal+json)
    + Body
        {
            "message":"Bad request."
        }

+ Response 403  (application/hal+json)
    + Body
        {
            "message":"Forbidden."
        }